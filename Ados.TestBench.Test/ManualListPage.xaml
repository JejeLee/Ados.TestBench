<Page x:Class="Ados.TestBench.Test.ManualListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:Ados.TestBench.Test"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      Title="ManualListPage"
      mc:Ignorable="d">

    <Grid>
        <DataGrid x:Name="_datas"
                  HorizontalContentAlignment="Center"
                  AlternatingRowBackground="#FF2C3203"
                  AutoGenerateColumns="False"
                  BorderThickness="1"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="True"
                  HorizontalScrollBarVisibility="Visible"
                  ItemsSource="{Binding StatesData}"
                  SelectionMode="Extended"
                  SelectionUnit="Cell">
            <DataGrid.Columns>
                <DataGridTextColumn Width="90"
                                    Binding="{Binding Time,
                                                      StringFormat=\{0:HH:mm:ss.ff\}}"
                                    FontWeight="Bold"
                                    Header="시간"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="90"
                                    Binding="{Binding DoorError}"
                                    Header="Error"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="90"
                                    Binding="{Binding DoorRun}"
                                    Header="Run"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="90"
                                    Binding="{Binding DirectionOpen}"
                                    Header="Open"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="90"
                                    Binding="{Binding DirectionClose}"
                                    Header="Close"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="90"
                                    Binding="{Binding LatchOn}"
                                    Header="Latch"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="90"
                                    Binding="{Binding ReleaseOn}"
                                    Header="Release"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="90"
                                    Binding="{Binding Clutch}"
                                    Header="Clutch"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="90"
                                    Binding="{Binding Test}"
                                    Header="Test"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="100"
                                    Binding="{Binding SpeedM}"
                                    Header="SpeedM"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="100"
                                    Binding="{Binding SpeedR}"
                                    Header="SpeedR"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="100"
                                    Binding="{Binding DoorAngle}"
                                    Header="Angle"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="100"
                                    Binding="{Binding MotorV}"
                                    Header="MotorV"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="100"
                                    Binding="{Binding MotorA}"
                                    Header="MotorM"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="100"
                                    Binding="{Binding DistanceF}"
                                    Header="DistF"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="100"
                                    Binding="{Binding DistanceR}"
                                    Header="DistR"
                                    IsReadOnly="True" />
            </DataGrid.Columns>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Custom:DataGridCellHelper.SaveDataGrid" Value="True" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="Cell" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="CellOrRowHeader" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="Cell" />
                                <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.FocusBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="CellOrRowHeader" />
                                <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.FocusBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightTextBrush}" />
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="Cell" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding (Selector.IsSelectionActive), RelativeSource={RelativeSource Self}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="CellOrRowHeader" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding (Selector.IsSelectionActive), RelativeSource={RelativeSource Self}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="Cell" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="CellOrRowHeader" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="Cell" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Custom:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}" Value="CellOrRowHeader" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>
    </Grid>
</Page>
